/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TimeBeforeEat_Frame.java
 *
 * Created on 21 juin 2011, 11:40:27
 */
package timebeforeeat;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author a807087
 */
public class TimeBeforeEat_Frame extends javax.swing.JFrame {

    /** Creates new form TimeBeforeEat_Frame */
    public TimeBeforeEat_Frame() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        this.setTitle("Time before ... Set time and push start !");
        jFormattedTextFieldHour.setText("00");
        jFormattedTextFieldMinute.setText("00");
        jFormattedTextFieldSecond.setText("00");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jFormattedTextFieldHour = new javax.swing.JFormattedTextField();
        jFormattedTextFieldMinute = new javax.swing.JFormattedTextField();
        jFormattedTextFieldSecond = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Start ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Enter your start time :");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("HH");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("MM");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("SS");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText(":");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText(":");

        try {
            jFormattedTextFieldHour.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextFieldHour.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jFormattedTextFieldHour.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jFormattedTextFieldHour.setFont(new java.awt.Font("Arial", 0, 14));

        try {
            jFormattedTextFieldMinute.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextFieldMinute.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jFormattedTextFieldMinute.setFont(new java.awt.Font("Arial", 0, 14));

        try {
            jFormattedTextFieldSecond.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextFieldSecond.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jFormattedTextFieldSecond.setFont(new java.awt.Font("Arial", 0, 14));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(82, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(71, Short.MAX_VALUE)
                .addComponent(jFormattedTextFieldHour, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jFormattedTextFieldMinute, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jFormattedTextFieldSecond, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69))
            .addGroup(layout.createSequentialGroup()
                .addGap(142, 142, 142)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(144, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jFormattedTextFieldHour, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextFieldMinute, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jFormattedTextFieldSecond, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jButton1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (jFormattedTextFieldHour.getText().equalsIgnoreCase("  ")) {
            jFormattedTextFieldHour.setText("00");
        }
        if (jFormattedTextFieldMinute.getText().equalsIgnoreCase("  ")) {
            jFormattedTextFieldMinute.setText("00");
        }
        if (jFormattedTextFieldSecond.getText().equalsIgnoreCase("  ")) {
            jFormattedTextFieldSecond.setText("00");
        }
        if (Integer.parseInt(jFormattedTextFieldHour.getText()) == 00 && Integer.parseInt(jFormattedTextFieldMinute.getText()) == 00 && Integer.parseInt(jFormattedTextFieldSecond.getText()) == 00) {
            JOptionPane.showMessageDialog(this.getContentPane(), "Null value, please set a real time.");
            return;
        }
        if (Integer.parseInt(jFormattedTextFieldHour.getText()) >= 24) {
            jFormattedTextFieldHour.setText("23");
        }
        if (Integer.parseInt(jFormattedTextFieldMinute.getText()) >= 60) {
            jFormattedTextFieldMinute.setText("59");
        }
        if (Integer.parseInt(jFormattedTextFieldSecond.getText()) >= 60) {
            jFormattedTextFieldSecond.setText("59");
        }
        jFormattedTextFieldHour.setEnabled(false);
        jFormattedTextFieldMinute.setEnabled(false);
        jFormattedTextFieldSecond.setEnabled(false);
        countDown = (Integer.parseInt(jFormattedTextFieldSecond.getText()) + (Integer.parseInt(jFormattedTextFieldMinute.getText()) * 60) + (Integer.parseInt(jFormattedTextFieldHour.getText()) * 3600)) * 1000;
        AutomaticStop auto = new AutomaticStop();
        time = System.currentTimeMillis();
        auto.start();
    }//GEN-LAST:event_jButton1ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JFormattedTextField jFormattedTextFieldHour;
    private javax.swing.JFormattedTextField jFormattedTextFieldMinute;
    private javax.swing.JFormattedTextField jFormattedTextFieldSecond;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    // End of variables declaration//GEN-END:variables
    long countDown = 0;
    long time = 0;

    /**
     * Thread for update time to left before stopping process
     */
    public class AutomaticStop extends Thread {

        public AutomaticStop() {
        }

        @Override
        public void run() {
            while ((countDown - (System.currentTimeMillis() - time)) > 0) {
                long result = (countDown - (System.currentTimeMillis() - time));
                int h = (int) result / 3600000;
                result -= h * 3600000;
                int m = (int) result / 60000;
                result -= m * 60000;
                int s = (int) result / 1000;
                if (h < 10) {
                    jFormattedTextFieldHour.setText("0" + h);
                } else {
                    jFormattedTextFieldHour.setText("" + h);
                }
                if (m < 10) {
                    jFormattedTextFieldMinute.setText("0" + m);
                } else {
                    jFormattedTextFieldMinute.setText("" + m);
                }
                if (s < 10) {
                    jFormattedTextFieldSecond.setText("0" + s);
                } else {
                    jFormattedTextFieldSecond.setText("" + s);
                }
                try {
                    AutomaticStop.sleep(900);
                } catch (InterruptedException ex) {
                }
            }
            jFormattedTextFieldHour.setEnabled(true);
            jFormattedTextFieldMinute.setEnabled(true);
            jFormattedTextFieldSecond.setEnabled(true);
            //Uncomment for disable blue screen and uncomment option pane
            ///*
            JFrame f = new JFrame();
            Dimension tailleEcran = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
            f.setSize((int) tailleEcran.getWidth(), (int) tailleEcran.getHeight());
            f.setUndecorated(true);
            f.setAlwaysOnTop(true);
            f.setContentPane(new Panneau());
            f.setVisible(true);
            try {
                AutomaticStop.sleep(10000);
            } catch (InterruptedException ex) {
            }
            f.dispose();
            //*/
            //JOptionPane.showMessageDialog(getContentPane(), "It's time !");
            jFormattedTextFieldHour.setText("00");
            jFormattedTextFieldMinute.setText("00");
            jFormattedTextFieldSecond.setText("00");
        }
    }

    public class Panneau extends JPanel {

        @Override
        public void paintComponent(Graphics g) {
            try {
                Image img = ImageIO.read(getClass().getResource("img.png"));
                g.drawImage(img, 0, 0, this.getWidth(), this.getHeight(), this);
            } catch (IOException e) {
            }
        }
    }
}
